// Code generated by protoc-gen-go.
// source: mashupsdk/mashupsdk.proto
// DO NOT EDIT!

/*
Package mashupsdk is a generated protocol buffer package.

It is generated from these files:
	mashupsdk/mashupsdk.proto

It has these top-level messages:
	MashupEmpty
	MashupConnectionConfigs
	MashupDisplayHint
	MashupDisplayBundle
	ShutdownReply
	MashupDetailedElement
	MashupDetailedElementBundle
	MashupElementState
	MashupElementStateBundle
*/
package mashupsdk

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MashupEmpty struct {
	AuthToken string `protobuf:"bytes,1,opt,name=authToken" json:"authToken,omitempty"`
}

func (m *MashupEmpty) Reset()                    { *m = MashupEmpty{} }
func (m *MashupEmpty) String() string            { return proto.CompactTextString(m) }
func (*MashupEmpty) ProtoMessage()               {}
func (*MashupEmpty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MashupEmpty) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

// The response message with mashup credentials
type MashupConnectionConfigs struct {
	AuthToken   string `protobuf:"bytes,1,opt,name=authToken" json:"authToken,omitempty"`
	CallerToken string `protobuf:"bytes,2,opt,name=callerToken" json:"callerToken,omitempty"`
	Port        int64  `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
}

func (m *MashupConnectionConfigs) Reset()                    { *m = MashupConnectionConfigs{} }
func (m *MashupConnectionConfigs) String() string            { return proto.CompactTextString(m) }
func (*MashupConnectionConfigs) ProtoMessage()               {}
func (*MashupConnectionConfigs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MashupConnectionConfigs) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *MashupConnectionConfigs) GetCallerToken() string {
	if m != nil {
		return m.CallerToken
	}
	return ""
}

func (m *MashupConnectionConfigs) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

// The query message with display position information.
type MashupDisplayHint struct {
	Xpos   int64 `protobuf:"varint,1,opt,name=xpos" json:"xpos,omitempty"`
	Ypos   int64 `protobuf:"varint,2,opt,name=ypos" json:"ypos,omitempty"`
	Width  int64 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height int64 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
}

func (m *MashupDisplayHint) Reset()                    { *m = MashupDisplayHint{} }
func (m *MashupDisplayHint) String() string            { return proto.CompactTextString(m) }
func (*MashupDisplayHint) ProtoMessage()               {}
func (*MashupDisplayHint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MashupDisplayHint) GetXpos() int64 {
	if m != nil {
		return m.Xpos
	}
	return 0
}

func (m *MashupDisplayHint) GetYpos() int64 {
	if m != nil {
		return m.Ypos
	}
	return 0
}

func (m *MashupDisplayHint) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *MashupDisplayHint) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type MashupDisplayBundle struct {
	AuthToken         string             `protobuf:"bytes,1,opt,name=authToken" json:"authToken,omitempty"`
	MashupDisplayHint *MashupDisplayHint `protobuf:"bytes,2,opt,name=mashupDisplayHint" json:"mashupDisplayHint,omitempty"`
}

func (m *MashupDisplayBundle) Reset()                    { *m = MashupDisplayBundle{} }
func (m *MashupDisplayBundle) String() string            { return proto.CompactTextString(m) }
func (*MashupDisplayBundle) ProtoMessage()               {}
func (*MashupDisplayBundle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MashupDisplayBundle) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *MashupDisplayBundle) GetMashupDisplayHint() *MashupDisplayHint {
	if m != nil {
		return m.MashupDisplayHint
	}
	return nil
}

// The response message containing the any messages to log
type ShutdownReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *ShutdownReply) Reset()                    { *m = ShutdownReply{} }
func (m *ShutdownReply) String() string            { return proto.CompactTextString(m) }
func (*ShutdownReply) ProtoMessage()               {}
func (*ShutdownReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ShutdownReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MashupDetailedElement struct {
	Basisid       int64               `protobuf:"varint,1,opt,name=basisid" json:"basisid,omitempty"`
	Id            int64               `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	State         *MashupElementState `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Name          string              `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Alias         string              `protobuf:"bytes,5,opt,name=alias" json:"alias,omitempty"`
	Description   string              `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Renderer      string              `protobuf:"bytes,7,opt,name=renderer" json:"renderer,omitempty"`
	Colabrenderer string              `protobuf:"bytes,8,opt,name=colabrenderer" json:"colabrenderer,omitempty"`
	Genre         string              `protobuf:"bytes,9,opt,name=genre" json:"genre,omitempty"`
	Subgenre      string              `protobuf:"bytes,10,opt,name=subgenre" json:"subgenre,omitempty"`
	Parentids     []int64             `protobuf:"varint,11,rep,packed,name=parentids" json:"parentids,omitempty"`
	Childids      []int64             `protobuf:"varint,12,rep,packed,name=childids" json:"childids,omitempty"`
}

func (m *MashupDetailedElement) Reset()                    { *m = MashupDetailedElement{} }
func (m *MashupDetailedElement) String() string            { return proto.CompactTextString(m) }
func (*MashupDetailedElement) ProtoMessage()               {}
func (*MashupDetailedElement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MashupDetailedElement) GetBasisid() int64 {
	if m != nil {
		return m.Basisid
	}
	return 0
}

func (m *MashupDetailedElement) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MashupDetailedElement) GetState() *MashupElementState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *MashupDetailedElement) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MashupDetailedElement) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *MashupDetailedElement) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MashupDetailedElement) GetRenderer() string {
	if m != nil {
		return m.Renderer
	}
	return ""
}

func (m *MashupDetailedElement) GetColabrenderer() string {
	if m != nil {
		return m.Colabrenderer
	}
	return ""
}

func (m *MashupDetailedElement) GetGenre() string {
	if m != nil {
		return m.Genre
	}
	return ""
}

func (m *MashupDetailedElement) GetSubgenre() string {
	if m != nil {
		return m.Subgenre
	}
	return ""
}

func (m *MashupDetailedElement) GetParentids() []int64 {
	if m != nil {
		return m.Parentids
	}
	return nil
}

func (m *MashupDetailedElement) GetChildids() []int64 {
	if m != nil {
		return m.Childids
	}
	return nil
}

type MashupDetailedElementBundle struct {
	AuthToken        string                   `protobuf:"bytes,1,opt,name=authToken" json:"authToken,omitempty"`
	DetailedElements []*MashupDetailedElement `protobuf:"bytes,2,rep,name=detailedElements" json:"detailedElements,omitempty"`
}

func (m *MashupDetailedElementBundle) Reset()                    { *m = MashupDetailedElementBundle{} }
func (m *MashupDetailedElementBundle) String() string            { return proto.CompactTextString(m) }
func (*MashupDetailedElementBundle) ProtoMessage()               {}
func (*MashupDetailedElementBundle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MashupDetailedElementBundle) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *MashupDetailedElementBundle) GetDetailedElements() []*MashupDetailedElement {
	if m != nil {
		return m.DetailedElements
	}
	return nil
}

type MashupElementState struct {
	Id    int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	State int64 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
}

func (m *MashupElementState) Reset()                    { *m = MashupElementState{} }
func (m *MashupElementState) String() string            { return proto.CompactTextString(m) }
func (*MashupElementState) ProtoMessage()               {}
func (*MashupElementState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MashupElementState) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MashupElementState) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

type MashupElementStateBundle struct {
	AuthToken     string                `protobuf:"bytes,1,opt,name=authToken" json:"authToken,omitempty"`
	ElementStates []*MashupElementState `protobuf:"bytes,2,rep,name=elementStates" json:"elementStates,omitempty"`
}

func (m *MashupElementStateBundle) Reset()                    { *m = MashupElementStateBundle{} }
func (m *MashupElementStateBundle) String() string            { return proto.CompactTextString(m) }
func (*MashupElementStateBundle) ProtoMessage()               {}
func (*MashupElementStateBundle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MashupElementStateBundle) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *MashupElementStateBundle) GetElementStates() []*MashupElementState {
	if m != nil {
		return m.ElementStates
	}
	return nil
}

func init() {
	proto.RegisterType((*MashupEmpty)(nil), "mashupsdk.MashupEmpty")
	proto.RegisterType((*MashupConnectionConfigs)(nil), "mashupsdk.MashupConnectionConfigs")
	proto.RegisterType((*MashupDisplayHint)(nil), "mashupsdk.MashupDisplayHint")
	proto.RegisterType((*MashupDisplayBundle)(nil), "mashupsdk.MashupDisplayBundle")
	proto.RegisterType((*ShutdownReply)(nil), "mashupsdk.ShutdownReply")
	proto.RegisterType((*MashupDetailedElement)(nil), "mashupsdk.MashupDetailedElement")
	proto.RegisterType((*MashupDetailedElementBundle)(nil), "mashupsdk.MashupDetailedElementBundle")
	proto.RegisterType((*MashupElementState)(nil), "mashupsdk.MashupElementState")
	proto.RegisterType((*MashupElementStateBundle)(nil), "mashupsdk.MashupElementStateBundle")
}

func init() { proto.RegisterFile("mashupsdk/mashupsdk.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x55, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0xcd, 0x4f, 0xd3, 0x26, 0x93, 0xb6, 0xfa, 0xba, 0x5f, 0x29, 0x6e, 0x28, 0x28, 0x5a, 0x10,
	0x0a, 0x42, 0x6a, 0xa5, 0xf4, 0x0e, 0x71, 0x43, 0x4b, 0x25, 0x54, 0x81, 0x00, 0x07, 0x6e, 0xb8,
	0xdb, 0x64, 0x87, 0x78, 0x89, 0xbd, 0xb6, 0x76, 0xd7, 0x94, 0x20, 0x21, 0xae, 0x79, 0x29, 0x9e,
	0x89, 0x47, 0x40, 0xbb, 0xeb, 0x24, 0x0d, 0xee, 0x4f, 0xee, 0x76, 0xce, 0x9c, 0x33, 0xe3, 0x99,
	0xb3, 0xb6, 0x61, 0x3f, 0x61, 0x3a, 0xca, 0x33, 0xcd, 0x27, 0x47, 0xf3, 0xd3, 0x61, 0xa6, 0x52,
	0x93, 0x92, 0xd6, 0x1c, 0xa0, 0x4f, 0xa1, 0xfd, 0xc6, 0x05, 0x67, 0x49, 0x66, 0xa6, 0xe4, 0x00,
	0x5a, 0x2c, 0x37, 0xd1, 0x87, 0x74, 0x82, 0x32, 0xa8, 0x76, 0xab, 0xbd, 0x56, 0xb8, 0x00, 0x68,
	0x02, 0x77, 0x3d, 0xf9, 0x34, 0x95, 0x12, 0x47, 0x46, 0xa4, 0xf2, 0x34, 0x95, 0x9f, 0xc5, 0x58,
	0xdf, 0x2c, 0x24, 0x5d, 0x68, 0x8f, 0x58, 0x1c, 0xa3, 0xf2, 0xf9, 0x9a, 0xcb, 0x5f, 0x86, 0x08,
	0x81, 0xb5, 0x2c, 0x55, 0x26, 0xa8, 0x77, 0xab, 0xbd, 0x7a, 0xe8, 0xce, 0x54, 0xc0, 0x8e, 0x6f,
	0xf7, 0x52, 0xe8, 0x2c, 0x66, 0xd3, 0x57, 0x42, 0x1a, 0x4b, 0xfc, 0x96, 0xa5, 0xda, 0xf5, 0xa8,
	0x87, 0xee, 0x6c, 0xb1, 0xa9, 0xc5, 0x6a, 0x1e, 0xb3, 0x67, 0xb2, 0x0b, 0x8d, 0x0b, 0xc1, 0x4d,
	0x54, 0x54, 0xf4, 0x01, 0xd9, 0x83, 0xf5, 0x08, 0xc5, 0x38, 0x32, 0xc1, 0x9a, 0x83, 0x8b, 0x88,
	0xfe, 0x84, 0xff, 0x97, 0x5a, 0x9d, 0xe4, 0x92, 0xc7, 0x78, 0xcb, 0x54, 0xe7, 0xb0, 0x93, 0xfc,
	0xfb, 0x7c, 0xee, 0x19, 0xda, 0xfd, 0x83, 0xc3, 0xc5, 0xce, 0x4b, 0x33, 0x84, 0x65, 0x19, 0x7d,
	0x02, 0x5b, 0x83, 0x28, 0x37, 0x3c, 0xbd, 0x90, 0x21, 0x66, 0xf1, 0x94, 0x04, 0xb0, 0x91, 0xa0,
	0xd6, 0x6c, 0x8c, 0x45, 0xe3, 0x59, 0x48, 0xff, 0xd4, 0xe0, 0x4e, 0x51, 0x13, 0x0d, 0x13, 0x31,
	0xf2, 0xb3, 0x18, 0x13, 0x94, 0xc6, 0x6a, 0x86, 0x4c, 0x0b, 0x2d, 0x78, 0xb1, 0x9e, 0x59, 0x48,
	0xb6, 0xa1, 0x26, 0x78, 0xb1, 0x9f, 0x9a, 0xe0, 0xe4, 0x18, 0x1a, 0xda, 0x30, 0x83, 0x6e, 0x3b,
	0xed, 0xfe, 0xfd, 0xd2, 0xe3, 0x16, 0x25, 0x07, 0x96, 0x14, 0x7a, 0xae, 0x5d, 0xb3, 0x64, 0x09,
	0xba, 0xd5, 0xb5, 0x42, 0x77, 0xb6, 0x6b, 0x66, 0xb1, 0x60, 0x3a, 0x68, 0x38, 0xd0, 0x07, 0xd6,
	0x6f, 0x8e, 0x7a, 0xa4, 0x44, 0x66, 0xef, 0x48, 0xb0, 0xee, 0xfd, 0xbe, 0x04, 0x91, 0x0e, 0x34,
	0x15, 0x4a, 0x8e, 0x0a, 0x55, 0xb0, 0xe1, 0xd2, 0xf3, 0x98, 0x3c, 0x82, 0xad, 0x51, 0x1a, 0xb3,
	0xe1, 0x9c, 0xd0, 0x74, 0x84, 0x65, 0xd0, 0x76, 0x1e, 0xa3, 0x54, 0x18, 0xb4, 0x7c, 0x67, 0x17,
	0xd8, 0xba, 0x3a, 0x1f, 0xfa, 0x04, 0xf8, 0xba, 0xb3, 0xd8, 0xba, 0x99, 0x31, 0x85, 0xd2, 0x08,
	0xae, 0x83, 0x76, 0xb7, 0xde, 0xab, 0x87, 0x0b, 0xc0, 0x2a, 0x47, 0x91, 0x88, 0xb9, 0x4d, 0x6e,
	0xba, 0xe4, 0x3c, 0xa6, 0xbf, 0xaa, 0x70, 0xef, 0xca, 0x95, 0xaf, 0x74, 0x4f, 0x5e, 0xc3, 0x7f,
	0x7c, 0x59, 0x66, 0xaf, 0x6a, 0xbd, 0xd7, 0xee, 0x77, 0xcb, 0xd7, 0x64, 0x99, 0x18, 0x96, 0x94,
	0xf4, 0x19, 0x90, 0xb2, 0x45, 0x85, 0xc1, 0xd5, 0xb9, 0xc1, 0xbb, 0x33, 0x83, 0xbd, 0xe7, 0x3e,
	0xa0, 0x3f, 0x20, 0x28, 0x6b, 0x57, 0x9a, 0xe1, 0x14, 0xb6, 0xf0, 0x92, 0x66, 0x36, 0xc0, 0x2d,
	0x17, 0x67, 0x59, 0xd3, 0xff, 0x5d, 0x87, 0x4d, 0xcf, 0x1a, 0xa0, 0xfa, 0x8a, 0x8a, 0xbc, 0x87,
	0xc6, 0x20, 0x62, 0x13, 0x24, 0xb4, 0x54, 0xa7, 0xf4, 0x89, 0xe9, 0xac, 0xc0, 0xa1, 0x15, 0x72,
	0x0e, 0xcd, 0xb7, 0x32, 0x44, 0x2d, 0xbe, 0x23, 0x79, 0x70, 0xdd, 0x5b, 0xe8, 0x47, 0xee, 0xdc,
	0xf8, 0x96, 0xd2, 0x0a, 0x89, 0x60, 0xf7, 0x63, 0xa6, 0x51, 0x99, 0xa5, 0xd1, 0x34, 0x79, 0x7c,
	0x9b, 0x6d, 0x45, 0xfd, 0x15, 0x79, 0xb4, 0x42, 0xc6, 0xb0, 0x7f, 0x55, 0x27, 0xef, 0xed, 0xc3,
	0x1b, 0x97, 0x5c, 0xf4, 0x5a, 0x85, 0x44, 0x2b, 0xe4, 0x39, 0x34, 0x67, 0xdf, 0x19, 0xb2, 0x57,
	0x96, 0xd8, 0x9f, 0x40, 0xe7, 0x1a, 0x9c, 0x56, 0x4e, 0x5e, 0xc0, 0xb6, 0xcc, 0x0d, 0x2e, 0xf2,
	0x27, 0xad, 0xc2, 0x4f, 0x3e, 0x79, 0x57, 0xfd, 0x44, 0xc7, 0xc2, 0x44, 0xf9, 0xf0, 0x70, 0x94,
	0x26, 0x47, 0x89, 0xfa, 0xa2, 0x04, 0x4e, 0xf0, 0xc8, 0x0a, 0x16, 0x7f, 0xa0, 0xe1, 0xba, 0xfb,
	0x05, 0x1d, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x25, 0xbc, 0x43, 0x0b, 0x9f, 0x06, 0x00, 0x00,
}
