syntax = "proto3";

option go_package = "github.com/mrjrieke/nute/mashupsdk";
option java_multiple_files = true;
option java_package = "nute.mashupsdk";
option java_outer_classname = "MashupSdk";

package mashupsdk;

// The mashup service definition.
service MashupServer {
  // Indicates to mashup it is time to shutdown.
  rpc Shake(MashupConnectionConfigs) returns (MashupConnectionConfigs) {}
  rpc OnResize(MashupDisplayBundle) returns (MashupDisplayHint) {}
  rpc UpsertMashupElements(MashupDetailedElementBundle) returns (MashupDetailedElementBundle) {}
  rpc UpsertMashupElementsState(MashupElementStateBundle) returns (MashupElementStateBundle) {}

  rpc Shutdown(MashupEmpty) returns (MashupEmpty) {}
}

message MashupEmpty {
  string authToken = 1;
}

// The response message with mashup credentials
message MashupConnectionConfigs {
  string authToken = 1;
  string callerToken = 2;
  int64 port = 3;
}

// The query message with display position information.
message MashupDisplayHint {
  int64 xpos = 1;
  int64 ypos = 2;
  int64 width = 3;
  int64 height = 4;
}

message MashupDisplayBundle {
  string authToken = 1;
  MashupDisplayHint mashupDisplayHint = 2;
}

// The response message containing the any messages to log
message ShutdownReply {
  string message = 1;
}

message MashupDetailedElement {
  int64 basisid = 1;
  int64 id = 2;
  MashupElementState state = 3;
  string name = 4;
  string alias = 5;
  string description = 6;
  string genre = 7;
  string subgenre = 8;
  repeated int64 parentids = 9;
  repeated int64 childids = 10;
}

message MashupDetailedElementBundle {
  string authToken = 1;
  repeated MashupDetailedElement detailedElements = 2;
}

message MashupElementState {
  int64 id = 1;
  int64 state = 2;
}

message MashupElementStateBundle {
  string authToken = 1;
  repeated MashupElementState elementStates = 2;
}